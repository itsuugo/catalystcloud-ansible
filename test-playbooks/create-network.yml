#!/usr/bin/env ansible-playbook
---

# This playbook demonstrates how to create a network, subnet and router on the
# Catalyst Cloud. Ansible will pick up the OpenStack environment variables from
# the operating system if an OpenStack RC file is sourced before running the
# playbook. Alternatively, you can specify the OpenStack authentication
# variables and refer to them when using the os_auth module.

- name: Deploy a cloud instance in OpenStack
  hosts: localhost
  vars:
    # OpenStack authentication variables (not required if RC sourced)
    os_auth_url: http://controller:35357/v2.0
#    os_region: nz-por-1
#    os_az: nz-por-1a
    os_project_name: admin
    os_username: admin
    os_password: openstack
    # Required variables
    ssh_public_key: /root/.ssh/id_rsa.pub

  tasks:
    #- name: Fetch information about the Catalyst Cloud
    #  os_client_config:
    #    clouds:
    #      - catalyst_cloud

    # If you have sourced an OpenStack RC file, connecting to the Catalyst
    # Cloud is as simple as running the os_auth module with no additional
    # parameters.
    - name: Connect to the Cloud
      os_auth:

    # If you have not sourced an OpenStack RC file, you will need to pass a few
    # mandatory authentication attributes, as demonstrated below.
    #- name: Connect to the Catalyst Cloud
    #  os_auth:
    #    auth:
    #      auth_url: "{{ os_auth_url }}"
    #      username: "{{ os_username }}"
    #      password: "{{ os_password }}"
    #      project_name: "{{ os_project_name }}"

    - name: Create a network
      os_network:
        state: present
        name: private-net

    - name: Create a subnet
      os_subnet:
        state: present
        name: private-subnet
        network_name: private-net
        cidr: 10.0.0.0/24
        dns_nameservers:
          - 8.8.8.8
          - 202.78.247.198
        allocation_pool_start: 10.0.0.10
        allocation_pool_end: 10.0.0.200

    - name: Create a router
      os_router:
        state: present
        name: tenant-router
        network: ext-net
        interfaces:
          - private-subnet

    - name: Create a security group
      os_security_group:
        state: present
        name: first-instance-sg
        description: Network access for our first instance.

    - name: Create a security group rule for SSH access
      os_security_group_rule:
        state: present
        security_group: first-instance-sg
        protocol: tcp
        port_range_min: 22
        port_range_max: 22
        remote_ip_prefix: 0.0.0.0/0

    - name: Import an SSH keypair
      os_keypair:
        state: present
        name: first-instance-key
        public_key_file: "{{ ssh_public_key }}"
